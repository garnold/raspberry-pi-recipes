#!/bin/bash

set -e
# set -x

basedir="`dirname $0`/.."
run_on="$1"
config="$2"

if [ -z "$run_on" -o -z "$config" -o ! -f "$config" ]; then
  echo "Usage: recipes/mkpi [instance|cluster|all] [config]"
  exit 1
else
  shift
  shift
fi

source "$config"

if [ "$PUBLIC_KEY" = "yes" ]; then
  overcast key push "$run_on" "$PUBLIC_KEY_FILE" --append "$@"
  overcast instance update "$run_on" --ssh-key "$PRIVATE_KEY_FILE" --password '' "$@"
fi

if [ "$BLUEZ" = "yes" ]; then
  PACKAGES="libusb-dev libdbus-1-dev libglib2.0-dev automake libudev-dev libical-dev libreadline-dev $PACKAGES"
fi

if [ "$NODEJS" = "yes" ]; then
  PACKAGES="build-essential $PACKAGES"
fi

if [ "$NODE_RED" = "yes" ]; then
  PACKAGES="build-essential python-dev libcap2-bin $PACKAGES"
  # TODO only install `python-rpi.gpio` if on Pi
  # PACKAGES="python-rpi.gpio $PACKAGES"
fi

overcast run "$run_on" "$basedir/scripts/apt-get-dist-upgrade" "$@"

overcast run "$run_on" "$basedir/scripts/apt-get-install" --env "PACKAGES=\"curl git htop zip collectd liboping0 $PACKAGES\"" "$@"

overcast run "$run_on" "$basedir/scripts/install-godaddy-c2-ca-root-cert-g2" "$@"

overcast run "$run_on" "$basedir/scripts/configure-collectd" "$@"

if [ "$LIBRATO" = "yes" ]; then
  overcast run "$run_on" "$basedir/scripts/configure-collectd-librato" --env "LIBRATO_USERNAME=\"$LIBRATO_USERNAME\" LIBRATO_PASSWORD=\"$LIBRATO_PASSWORD\"" "$@"
fi

if [ "$NOIP" = "yes" ]; then
  overcast run "$run_on" "$basedir/scripts/configure-noip-client" --env "NOIP_USERNAME=\"$NOIP_USERNAME\" NOIP_PASSWORD=\"$NOIP_PASSWORD\"" "$@"
fi

if [ "$WIFI" = "yes" ]; then
  overcast run "$run_on" "$basedir/scripts/configure-wifi" --env "WIFI_SSID=\"$WIFI_SSID\" WIFI_PASSWORD=\"$WIFI_PASSWORD\"" "$@"
fi

if [ "$BLUEZ" = "yes" ]; then
  overcast run "$run_on" "$basedir/scripts/install-bluez-5" --env "BLUEZ_VERSION=\"$BLUEZ_VERSION\"" "$@"
fi

if [ "$NODEJS" = "yes" ]; then
  overcast run "$run_on" "$basedir/scripts/install-nodejs" --env "NODEJS_VERSION=\"$NODEJS_VERSION\"" "$@"
fi

if [ "$NODE_RED" = "yes" ]; then
  overcast run "$run_on" "$basedir/scripts/install-node-red" "$@"
fi

# This should remain last to ensure passwordless SSH is available throughout the install process
if [ "$LOCK_PI" = "yes" ]; then
  overcast run "$run_on" 'sudo usermod --lock $USER' "$@"
fi
